name: CI

on:
  push:
    branches:
      - Stage
  pull_request:
    branches:
      - Stage

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: npm test

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: npm test

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t farhanishappy/docker-note-keeper-image .

      - name: Push Docker image to Docker Hub
        run: docker push farhanishappy/docker-note-keeper-image

      - name: Deploy to Render
        run: |
          curl -X POST "https://api.render.com/v1/deploys" \
          -H "Authorization: Bearer ${{ secrets.RENDER_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"branch": "main", "image": "farhanishappy/docker-note-keeper-image", "services": [{"name": "note-keeper", "envVars": {"MONGODB_URI": "mongodb+srv://anas:anastodolist@cluster0.7ygwalc.mongodb.net/?retryWrites=true&w=majority","PORT" : "3000"}}]}'
